old song老师门下的蔡伟健童鞋教你入门敲vue项目
前置任务：安装node，cnpm环境
生成一个简单的vue-cli项目
1.cnpm i vue-cli -g  //安装环境
2.vue init webpack vue2-shop  //初始化vue-cli项目
3.cd vue2-shop    (项目名称)
4.cnpm i          //安装依赖
5.npm run dev  //运行项目 npm start

Git提交
VCS —— Enable V C I ——GIT  //使用git管理
View ——Tool W——version control  //调出版本控制视图
右键项目名称 —— Git ——commit // 提交版本，每次提交要填commit message，以提示该版本修改了什么内容

路由的使用
1.npm start运行项目，浏览器打开localhost:8080
2.修改App.vue，去掉img，浏览器的vue图标没了
3.在src下创建views目录,创建GoodList.vue
//前置任务：.vue需要在setting中配置——Editor ——file and ** template，
//复制src/components下的.vue文件过去，把多余的内容去掉，模板取名.vue
4.GoodList.vue对应到router下复制一个路由指像它
5.在地址栏尾巴处添加GoodList，此时跳到GoodList页面，同理再创建一个cart.vue
6.把第一个路由的component也指向goodlist，此时它是主页

编写页面
把resource的html，css，js文件引过来使用
1.把goodlist.html的body复制过来goodlist.vue放入template中
2.修改css样式，去掉嵌套的.vue的所有样式
3.把css整个拉到static的assets目录下
4.在goodlist.vue中的script标签内，在export default上import样式进来


goodlist.vue组件化
1.在component目录下创建NavHeader.vue来存放goodlist.vue的header模块
,header剪切到template中
2.在goodlist.vue中import引入组件
如import NavHeader from './../components/NavHeader.vue'
3.在goodlist.vue中的component里引用组件，并命名
如'nav-header': NavHeader
然后在去掉的header的位置使用组件<nav-header></navheader>
4.刷新，发现和原本的页面一样没有变化，成功组件化，
其他的模块以此类推NavBread,NavFooter组件化

推到git上
右键——Git——repository——push
push填写URL，你的git上新建个项目，将地址复制下来

团队分工的时候，去掉import样式
写到.vue 的<stlye scoped>内，样式问题，可以解掉scoped作用域调整
样式拆分（暂未做）

利用devServer提供数据服务

goodList.vue利用axios请求数据

价格数据过滤的样式绑定

移动端数据过滤组件的展示

移动端数据过滤组件隐藏

Vue图片的懒加载
1.cnpm install vue-lazyload -S
2.main.js引入
3.图片:src改成v-lazy

cnpm i express-generator -g
express --version 查看e-g版本
express --ejs server
cd server
cnpm i
npm start 端口3000跑起来

app.js页面ejs切换成常用的html模板
var ejs = require('ejs')
app.engine('.html', ejs.__express);
app.set('view engine', 'html');

把服务器打印的敏感信息干掉error.html下的
<pre><%= error.stack %></pre>

创建models/goods.js
cnpm i mongoose -S

CMD
cd C:\Program Files\MongoDB\Server\3.2\bin
show dbs
use vue-shop
show tables
db.goods.find()
新建modles/goods.js模板
数据库查询语句写在router/goods下

修改请求的地址
proxyTable: {
      '/goods':{
        target:'http://localhost:3000/'
      }
    }
app.all('*', function(req, res, next) {
  // CORS配置
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  res.header("Access-Control-Allow-Methods","PUT,POST,GET,DELETE,OPTIONS");
  res.header("X-Powered-By",' 3.2.1')
  res.header("Content-Type", "application/json;charset=utf-8");
  next();
});
